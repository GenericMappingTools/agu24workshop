Traceback (most recent call last):
  File "/home/runner/micromamba/envs/agu24workshop/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/micromamba/envs/agu24workshop/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/agu24workshop/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/agu24workshop/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/agu24workshop/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/micromamba/envs/agu24workshop/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/micromamba/envs/agu24workshop/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
grid = pygmt.datasets.load_earth_relief(resolution="03m", region=region)

# You also can access then cut the grid
# and this way can save grid (outgrid) as a file in your folder.
# https://www.generic-mapping-tools.org/remote-datasets/

# pygmt.grdcut(
#    grid="@earth_relief_03m", region=region, outgrid="Alaska.grd"
# )
------------------

----- stderr -----
grdblend [ERROR]: Remote download is currently deactivated
----- stderr -----
grdblend [ERROR]: Unable to obtain remote file @N00W180.earth_relief_03m_g.nc
----- stderr -----
grdblend [ERROR]: Remote download is currently deactivated
----- stderr -----
grdblend [ERROR]: Unable to obtain remote file @N00W180.earth_relief_03m_g.nc
----- stderr -----
grdblend [ERROR]: Remote download is currently deactivated
----- stderr -----
grdblend [ERROR]: Unable to obtain remote file @N00W180.earth_relief_03m_g.nc
----- stderr -----
grdblend [ERROR]: File @N00W180.earth_relief_03m_g.nc not found
----- stderr -----
[Session pygmt-session (12)]: Error returned from GMT API: GMT_FILE_NOT_FOUND (16)
----- stderr -----
gmtread [ERROR]: ERROR - Unable to produce blended grid from /tmp/=tiled_328_GX_TY1Nu7
----- stderr -----
[Session pygmt-session (12)]: Error returned from GMT API: GMT_GRID_READ_ERROR (18)
----- stderr -----
[Session pygmt-session (12)]: Error returned from GMT API: GMT_GRID_READ_ERROR (18)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mIndexError[0m                                Traceback (most recent call last)
Cell [0;32mIn[6], line 1[0m
[0;32m----> 1[0m grid [38;5;241m=[39m [43mpygmt[49m[38;5;241;43m.[39;49m[43mdatasets[49m[38;5;241;43m.[39;49m[43mload_earth_relief[49m[43m([49m[43mresolution[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43m03m[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mregion[49m[38;5;241;43m=[39;49m[43mregion[49m[43m)[49m
[1;32m      3[0m [38;5;66;03m# You also can access then cut the grid[39;00m
[1;32m      4[0m [38;5;66;03m# and this way can save grid (outgrid) as a file in your folder.[39;00m
[1;32m      5[0m [38;5;66;03m# https://www.generic-mapping-tools.org/remote-datasets/[39;00m
[0;32m   (...)[0m
[1;32m      8[0m [38;5;66;03m#    grid="@earth_relief_03m", region=region, outgrid="Alaska.grd"[39;00m
[1;32m      9[0m [38;5;66;03m# )[39;00m

File [0;32m~/micromamba/envs/agu24workshop/lib/python3.12/site-packages/pygmt/datasets/earth_relief.py:176[0m, in [0;36mload_earth_relief[0;34m(resolution, region, registration, data_source, use_srtm)[0m
[1;32m    174[0m     [38;5;28;01mcase[39;00m [38;5;124m"[39m[38;5;124mgebco[39m[38;5;124m"[39m [38;5;241m|[39m [38;5;124m"[39m[38;5;124mgebcosi[39m[38;5;124m"[39m:
[1;32m    175[0m         name [38;5;241m=[39m [38;5;124m"[39m[38;5;124mearth_gebco[39m[38;5;124m"[39m
[0;32m--> 176[0m grid [38;5;241m=[39m [43m_load_remote_dataset[49m[43m([49m
[1;32m    177[0m [43m    [49m[43mname[49m[38;5;241;43m=[39;49m[43mname[49m[43m,[49m
[1;32m    178[0m [43m    [49m[43mprefix[49m[38;5;241;43m=[39;49m[43mprefix[49m[43m,[49m
[1;32m    179[0m [43m    [49m[43mresolution[49m[38;5;241;43m=[39;49m[43mresolution[49m[43m,[49m
[1;32m    180[0m [43m    [49m[43mregion[49m[38;5;241;43m=[39;49m[43mregion[49m[43m,[49m
[1;32m    181[0m [43m    [49m[43mregistration[49m[38;5;241;43m=[39;49m[43mregistration[49m[43m,[49m
[1;32m    182[0m [43m[49m[43m)[49m
[1;32m    183[0m [38;5;28;01mreturn[39;00m grid

File [0;32m~/micromamba/envs/agu24workshop/lib/python3.12/site-packages/pygmt/helpers/decorators.py:773[0m, in [0;36mkwargs_to_strings.<locals>.converter.<locals>.new_module[0;34m(*args, **kwargs)[0m
[1;32m    770[0m             bound[38;5;241m.[39marguments[[38;5;124m"[39m[38;5;124mkwargs[39m[38;5;124m"[39m][arg] [38;5;241m=[39m newvalue
[1;32m    772[0m [38;5;66;03m# Execute the original function and return its output[39;00m
[0;32m--> 773[0m [38;5;28;01mreturn[39;00m [43mmodule_func[49m[43m([49m[38;5;241;43m*[39;49m[43mbound[49m[38;5;241;43m.[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mbound[49m[38;5;241;43m.[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/micromamba/envs/agu24workshop/lib/python3.12/site-packages/pygmt/datasets/load_remote_dataset.py:420[0m, in [0;36m_load_remote_dataset[0;34m(name, prefix, resolution, region, registration)[0m
[1;32m    415[0m     [38;5;28;01mwith[39;00m lib[38;5;241m.[39mvirtualfile_out(kind[38;5;241m=[39m[38;5;124m"[39m[38;5;124mgrid[39m[38;5;124m"[39m) [38;5;28;01mas[39;00m voutgrd:
[1;32m    416[0m         lib[38;5;241m.[39mcall_module(
[1;32m    417[0m             module[38;5;241m=[39m[38;5;124m"[39m[38;5;124mread[39m[38;5;124m"[39m,
[1;32m    418[0m             args[38;5;241m=[39m[fname, voutgrd, [38;5;241m*[39mbuild_arg_list(kwdict)],
[1;32m    419[0m         )
[0;32m--> 420[0m         grid [38;5;241m=[39m [43mlib[49m[38;5;241;43m.[39;49m[43mvirtualfile_to_raster[49m[43m([49m[43moutgrid[49m[38;5;241;43m=[39;49m[38;5;28;43;01mNone[39;49;00m[43m,[49m[43m [49m[43mvfname[49m[38;5;241;43m=[39;49m[43mvoutgrd[49m[43m)[49m
[1;32m    422[0m [38;5;66;03m# Full path to the grid if not tiled grids.[39;00m
[1;32m    423[0m source [38;5;241m=[39m which(fname, download[38;5;241m=[39m[38;5;124m"[39m[38;5;124ma[39m[38;5;124m"[39m) [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m resinfo[38;5;241m.[39mtiled [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m

File [0;32m~/micromamba/envs/agu24workshop/lib/python3.12/site-packages/pygmt/clib/session.py:2150[0m, in [0;36mSession.virtualfile_to_raster[0;34m(self, vfname, kind, outgrid)[0m
[1;32m   2144[0m     family [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39minquire_virtualfile(vfname)
[1;32m   2145[0m     kind [38;5;241m=[39m {  [38;5;66;03m# type: ignore[assignment][39;00m
[1;32m   2146[0m         [38;5;28mself[39m[[38;5;124m"[39m[38;5;124mGMT_IS_GRID[39m[38;5;124m"[39m]: [38;5;124m"[39m[38;5;124mgrid[39m[38;5;124m"[39m,
[1;32m   2147[0m         [38;5;28mself[39m[[38;5;124m"[39m[38;5;124mGMT_IS_IMAGE[39m[38;5;124m"[39m]: [38;5;124m"[39m[38;5;124mimage[39m[38;5;124m"[39m,
[1;32m   2148[0m         [38;5;28mself[39m[[38;5;124m"[39m[38;5;124mGMT_IS_CUBE[39m[38;5;124m"[39m]: [38;5;124m"[39m[38;5;124mcube[39m[38;5;124m"[39m,
[1;32m   2149[0m     }[family]
[0;32m-> 2150[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mread_virtualfile[49m[43m([49m[43mvfname[49m[43m,[49m[43m [49m[43mkind[49m[38;5;241;43m=[39;49m[43mkind[49m[43m)[49m[38;5;241;43m.[39;49m[43mcontents[49m[38;5;241;43m.[39;49m[43mto_dataarray[49m[43m([49m[43m)[49m

File [0;32m~/micromamba/envs/agu24workshop/lib/python3.12/site-packages/pygmt/datatypes/grid.py:192[0m, in [0;36m_GMT_GRID.to_dataarray[0;34m(self)[0m
[1;32m    188[0m [38;5;66;03m# Flip the coordinates and data if necessary so that coordinates are ascending.[39;00m
[1;32m    189[0m [38;5;66;03m# `grid.sortby(list(grid.dims))` sometimes causes crashes.[39;00m
[1;32m    190[0m [38;5;66;03m# The solution comes from https://github.com/pydata/xarray/discussions/6695.[39;00m
[1;32m    191[0m [38;5;28;01mfor[39;00m dim [38;5;129;01min[39;00m grid[38;5;241m.[39mdims:
[0;32m--> 192[0m     [38;5;28;01mif[39;00m [43mgrid[49m[43m[[49m[43mdim[49m[43m][49m[43m[[49m[38;5;241;43m0[39;49m[43m][49m [38;5;241m>[39m grid[dim][[38;5;241m1[39m]:
[1;32m    193[0m         grid [38;5;241m=[39m grid[38;5;241m.[39misel({dim: [38;5;28mslice[39m([38;5;28;01mNone[39;00m, [38;5;28;01mNone[39;00m, [38;5;241m-[39m[38;5;241m1[39m)})
[1;32m    195[0m [38;5;66;03m# Set GMT accessors.[39;00m
[1;32m    196[0m [38;5;66;03m# Must put at the end, otherwise info gets lost after certain grid operations.[39;00m

File [0;32m~/micromamba/envs/agu24workshop/lib/python3.12/site-packages/xarray/core/dataarray.py:901[0m, in [0;36mDataArray.__getitem__[0;34m(self, key)[0m
[1;32m    898[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_getitem_coord(key)
[1;32m    899[0m [38;5;28;01melse[39;00m:
[1;32m    900[0m     [38;5;66;03m# xarray-style array indexing[39;00m
[0;32m--> 901[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43misel[49m[43m([49m[43mindexers[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_item_key_to_dict[49m[43m([49m[43mkey[49m[43m)[49m[43m)[49m

File [0;32m~/micromamba/envs/agu24workshop/lib/python3.12/site-packages/xarray/core/dataarray.py:1540[0m, in [0;36mDataArray.isel[0;34m(self, indexers, drop, missing_dims, **indexers_kwargs)[0m
[1;32m   1535[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_from_temp_dataset(ds)
[1;32m   1537[0m [38;5;66;03m# Much faster algorithm for when all indexers are ints, slices, one-dimensional[39;00m
[1;32m   1538[0m [38;5;66;03m# lists, or zero or one-dimensional np.ndarray's[39;00m
[0;32m-> 1540[0m variable [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_variable[49m[38;5;241;43m.[39;49m[43misel[49m[43m([49m[43mindexers[49m[43m,[49m[43m [49m[43mmissing_dims[49m[38;5;241;43m=[39;49m[43mmissing_dims[49m[43m)[49m
[1;32m   1541[0m indexes, index_variables [38;5;241m=[39m isel_indexes([38;5;28mself[39m[38;5;241m.[39mxindexes, indexers)
[1;32m   1543[0m coords [38;5;241m=[39m {}

File [0;32m~/micromamba/envs/agu24workshop/lib/python3.12/site-packages/xarray/core/variable.py:1049[0m, in [0;36mVariable.isel[0;34m(self, indexers, missing_dims, **indexers_kwargs)[0m
[1;32m   1046[0m indexers [38;5;241m=[39m drop_dims_from_indexers(indexers, [38;5;28mself[39m[38;5;241m.[39mdims, missing_dims)
[1;32m   1048[0m key [38;5;241m=[39m [38;5;28mtuple[39m(indexers[38;5;241m.[39mget(dim, [38;5;28mslice[39m([38;5;28;01mNone[39;00m)) [38;5;28;01mfor[39;00m dim [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mdims)
[0;32m-> 1049[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m[[49m[43mkey[49m[43m][49m

File [0;32m~/micromamba/envs/agu24workshop/lib/python3.12/site-packages/xarray/core/variable.py:816[0m, in [0;36mVariable.__getitem__[0;34m(self, key)[0m
[1;32m    813[0m dims, indexer, new_order [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_broadcast_indexes(key)
[1;32m    814[0m indexable [38;5;241m=[39m as_indexable([38;5;28mself[39m[38;5;241m.[39m_data)
[0;32m--> 816[0m data [38;5;241m=[39m [43mindexing[49m[38;5;241;43m.[39;49m[43mapply_indexer[49m[43m([49m[43mindexable[49m[43m,[49m[43m [49m[43mindexer[49m[43m)[49m
[1;32m    818[0m [38;5;28;01mif[39;00m new_order:
[1;32m    819[0m     data [38;5;241m=[39m np[38;5;241m.[39mmoveaxis(data, [38;5;28mrange[39m([38;5;28mlen[39m(new_order)), new_order)

File [0;32m~/micromamba/envs/agu24workshop/lib/python3.12/site-packages/xarray/core/indexing.py:1033[0m, in [0;36mapply_indexer[0;34m(indexable, indexer)[0m
[1;32m   1031[0m     [38;5;28;01mreturn[39;00m indexable[38;5;241m.[39moindex[indexer]
[1;32m   1032[0m [38;5;28;01melse[39;00m:
[0;32m-> 1033[0m     [38;5;28;01mreturn[39;00m [43mindexable[49m[43m[[49m[43mindexer[49m[43m][49m

File [0;32m~/micromamba/envs/agu24workshop/lib/python3.12/site-packages/xarray/core/indexing.py:1798[0m, in [0;36mPandasIndexingAdapter.__getitem__[0;34m(self, indexer)[0m
[1;32m   1795[0m     indexable [38;5;241m=[39m NumpyIndexingAdapter(np[38;5;241m.[39masarray([38;5;28mself[39m))
[1;32m   1796[0m     [38;5;28;01mreturn[39;00m indexable[indexer]
[0;32m-> 1798[0m result [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43marray[49m[43m[[49m[43mkey[49m[43m][49m
[1;32m   1800[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_handle_result(result)

File [0;32m~/micromamba/envs/agu24workshop/lib/python3.12/site-packages/pandas/core/indexes/base.py:5389[0m, in [0;36mIndex.__getitem__[0;34m(self, key)[0m
[1;32m   5386[0m [38;5;28;01mif[39;00m is_integer(key) [38;5;129;01mor[39;00m is_float(key):
[1;32m   5387[0m     [38;5;66;03m# GH#44051 exclude bool, which would return a 2d ndarray[39;00m
[1;32m   5388[0m     key [38;5;241m=[39m com[38;5;241m.[39mcast_scalar_indexer(key)
[0;32m-> 5389[0m     [38;5;28;01mreturn[39;00m [43mgetitem[49m[43m([49m[43mkey[49m[43m)[49m
[1;32m   5391[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(key, [38;5;28mslice[39m):
[1;32m   5392[0m     [38;5;66;03m# This case is separated from the conditional above to avoid[39;00m
[1;32m   5393[0m     [38;5;66;03m# pessimization com.is_bool_indexer and ndim checks.[39;00m
[1;32m   5394[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_getitem_slice(key)

[0;31mIndexError[0m: index 0 is out of bounds for axis 0 with size 0

